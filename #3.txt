Started by user ramiro nahuel flores
Obtained Jenkinsfile from git https://github.com/ramiro0987/nodejs-helloworld-api.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/desafio2/nodejs-helloworld-pipeline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
using credential educacionit-github-token
Cloning the remote Git repository
Cloning repository https://github.com/ramiro0987/nodejs-helloworld-api.git
 > git init /var/lib/jenkins/workspace/desafio2/nodejs-helloworld-pipeline # timeout=10
Fetching upstream changes from https://github.com/ramiro0987/nodejs-helloworld-api.git
 > git --version # timeout=10
 > git --version # 'git version 2.43.0'
using GIT_ASKPASS to set credentials educacionit-github-token
 > git fetch --tags --force --progress -- https://github.com/ramiro0987/nodejs-helloworld-api.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/ramiro0987/nodejs-helloworld-api.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision d328d52c1286fa724ed3afbc29fbdec3d679d889 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f d328d52c1286fa724ed3afbc29fbdec3d679d889 # timeout=10
Commit message: "Update nodejs version"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Tool Install)
[Pipeline] tool
Unpacking https://nodejs.org/dist/v21.0.0/node-v21.0.0-linux-x64.tar.gz to /var/lib/jenkins/tools/jenkins.plugins.nodejs.tools.NodeJSInstallation/nodejs21 on Jenkins
[Pipeline] envVarsForTool
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
Ejecutar npm install
[Pipeline] sh
+ npm install

added 367 packages, and audited 368 packages in 3s

45 packages are looking for funding
  run `npm fund` for details

9 vulnerabilities (3 low, 1 moderate, 5 high)

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
Ejecutar npm test push
[Pipeline] sh
+ npm test

> nodejs-helloworld-api@1.0.0 test
> jest --forceExit

  console.log
    Server is listening on port 3000

      at Server.log (index.js:10:13)

PASS ./index.test.js
  GET /
    âœ“ responds with hello world message in JSON format (23 ms)

Test Suites: 1 passed, 1 total
Tests:       1 passed, 1 total
Snapshots:   0 total
Time:        0.387 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
